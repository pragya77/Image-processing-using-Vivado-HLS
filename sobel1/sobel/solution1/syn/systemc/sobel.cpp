// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<51> sobel::ap_ST_fsm_state1 = "1";
const sc_lv<51> sobel::ap_ST_fsm_state2 = "10";
const sc_lv<51> sobel::ap_ST_fsm_state3 = "100";
const sc_lv<51> sobel::ap_ST_fsm_state4 = "1000";
const sc_lv<51> sobel::ap_ST_fsm_state5 = "10000";
const sc_lv<51> sobel::ap_ST_fsm_state6 = "100000";
const sc_lv<51> sobel::ap_ST_fsm_state7 = "1000000";
const sc_lv<51> sobel::ap_ST_fsm_state8 = "10000000";
const sc_lv<51> sobel::ap_ST_fsm_state9 = "100000000";
const sc_lv<51> sobel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<51> sobel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<51> sobel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<51> sobel::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<51> sobel::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<32> sobel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> sobel::ap_const_lv1_1 = "1";
const sc_lv<32> sobel::ap_const_lv32_3 = "11";
const sc_lv<32> sobel::ap_const_lv32_5 = "101";
const sc_lv<32> sobel::ap_const_lv32_1 = "1";
const sc_lv<1> sobel::ap_const_lv1_0 = "0";
const sc_lv<32> sobel::ap_const_lv32_2 = "10";
const sc_lv<32> sobel::ap_const_lv32_4 = "100";
const sc_lv<32> sobel::ap_const_lv32_6 = "110";
const sc_lv<32> sobel::ap_const_lv32_7 = "111";
const sc_lv<32> sobel::ap_const_lv32_A = "1010";
const sc_lv<32> sobel::ap_const_lv32_B = "1011";
const sc_lv<32> sobel::ap_const_lv32_E = "1110";
const sc_lv<32> sobel::ap_const_lv32_F = "1111";
const sc_lv<9> sobel::ap_const_lv9_0 = "000000000";
const sc_lv<32> sobel::ap_const_lv32_8 = "1000";
const sc_lv<8> sobel::ap_const_lv8_1 = "1";
const sc_lv<32> sobel::ap_const_lv32_9 = "1001";
const sc_lv<32> sobel::ap_const_lv32_C = "1100";
const sc_lv<32> sobel::ap_const_lv32_32 = "110010";
const sc_lv<32> sobel::ap_const_lv32_D = "1101";
const sc_lv<32> sobel::ap_const_lv32_101 = "100000001";
const sc_lv<8> sobel::ap_const_lv8_0 = "00000000";
const sc_lv<17> sobel::ap_const_lv17_FF = "11111111";
const sc_lv<15> sobel::ap_const_lv15_0 = "000000000000000";
const sc_lv<9> sobel::ap_const_lv9_100 = "100000000";
const sc_lv<9> sobel::ap_const_lv9_1 = "1";
const sc_lv<9> sobel::ap_const_lv9_FF = "11111111";
const sc_lv<9> sobel::ap_const_lv9_1FF = "111111111";
const sc_lv<17> sobel::ap_const_lv17_FF00 = "1111111100000000";
const sc_lv<8> sobel::ap_const_lv8_FF = "11111111";

sobel::sobel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    image_U = new sobel_image("image_U");
    image_U->clk(ap_clk);
    image_U->reset(ap_rst);
    image_U->address0(image_address0);
    image_U->ce0(image_ce0);
    image_U->we0(image_we0);
    image_U->d0(image_d0);
    image_U->q0(image_q0);
    sobel_sdiv_32ns_3bkb_U0 = new sobel_sdiv_32ns_3bkb<1,36,32,32,32>("sobel_sdiv_32ns_3bkb_U0");
    sobel_sdiv_32ns_3bkb_U0->clk(ap_clk);
    sobel_sdiv_32ns_3bkb_U0->reset(ap_rst);
    sobel_sdiv_32ns_3bkb_U0->start(grp_fu_823_ap_start);
    sobel_sdiv_32ns_3bkb_U0->done(grp_fu_823_ap_done);
    sobel_sdiv_32ns_3bkb_U0->din0(grp_fu_823_p0);
    sobel_sdiv_32ns_3bkb_U0->din1(tmp_6_reg_1039);
    sobel_sdiv_32ns_3bkb_U0->ce(ap_var_for_const0);
    sobel_sdiv_32ns_3bkb_U0->dout(grp_fu_823_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_abs1_fu_656_p3);
    sensitive << ( y_dir_reg_1022 );
    sensitive << ( abscond1_fu_651_p2 );
    sensitive << ( neg1_fu_646_p2 );

    SC_METHOD(thread_abs_fu_639_p3);
    sensitive << ( x_dir_reg_1015 );
    sensitive << ( abscond_fu_634_p2 );
    sensitive << ( neg_fu_629_p2 );

    SC_METHOD(thread_abscond1_fu_651_p2);
    sensitive << ( or_cond7_reg_934 );
    sensitive << ( y_dir_reg_1022 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_abscond_fu_634_p2);
    sensitive << ( or_cond7_reg_934 );
    sensitive << ( x_dir_reg_1015 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond1_fu_773_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond1_fu_773_p2 );

    SC_METHOD(thread_c_1_fu_729_p2);
    sensitive << ( c_reg_233 );

    SC_METHOD(thread_d_1_fu_723_p2);
    sensitive << ( d_reg_245 );

    SC_METHOD(thread_exitcond1_fu_773_p2);
    sensitive << ( k_reg_256 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_exitcond2_fu_717_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( d_reg_245 );

    SC_METHOD(thread_exitcond3_fu_692_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( c_reg_233 );

    SC_METHOD(thread_exitcond4_fu_448_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_exitcond5_fu_322_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_exitcond_fu_793_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( l_reg_268 );

    SC_METHOD(thread_grp_fu_823_ap_start);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_823_p0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( image_q0 );
    sensitive << ( tmp_44_fu_811_p2 );

    SC_METHOD(thread_i_1_fu_328_p2);
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_image_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( image_addr_1_reg_920 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_31_fu_712_p1 );
    sensitive << ( tmp_43_fu_787_p1 );

    SC_METHOD(thread_image_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_image_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( abs_fu_639_p3 );
    sensitive << ( abs1_fu_656_p3 );

    SC_METHOD(thread_image_we0);
    sensitive << ( or_cond7_reg_934 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_image_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( input_image_addr_6_reg_905 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_39_cast_fu_498_p1 );
    sensitive << ( tmp_42_cast_fu_524_p1 );
    sensitive << ( tmp_43_cast_fu_543_p1 );

    SC_METHOD(thread_input_image_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_33_cast_fu_412_p1 );
    sensitive << ( tmp_40_cast_fu_507_p1 );
    sensitive << ( tmp_41_cast_fu_539_p1 );
    sensitive << ( tmp_44_cast_fu_547_p1 );

    SC_METHOD(thread_input_image_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_input_image_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_j_1_fu_454_p2);
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_j_cast8_cast1_fu_399_p1);
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_j_cast8_cast_fu_403_p1);
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_j_cast8_fu_394_p1);
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_k_1_fu_805_p2);
    sensitive << ( k_reg_256 );

    SC_METHOD(thread_l_1_fu_799_p2);
    sensitive << ( l_reg_268 );

    SC_METHOD(thread_max_6_max_1_fu_741_p3);
    sensitive << ( image_q0 );
    sensitive << ( min_fu_56 );
    sensitive << ( tmp_2_fu_735_p2 );

    SC_METHOD(thread_max_fu_755_p3);
    sensitive << ( image_q0 );
    sensitive << ( min_1_fu_60 );
    sensitive << ( tmp_20_fu_749_p2 );

    SC_METHOD(thread_neg1_fu_646_p2);
    sensitive << ( y_dir_reg_1022 );

    SC_METHOD(thread_neg_fu_629_p2);
    sensitive << ( x_dir_reg_1015 );

    SC_METHOD(thread_or_cond7_fu_478_p2);
    sensitive << ( tmp1_reg_881 );
    sensitive << ( tmp2_fu_472_p2 );

    SC_METHOD(thread_output_image_address0);
    sensitive << ( output_image_addr_3_reg_841 );
    sensitive << ( output_image_addr_reg_910 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_image_addr_1_reg_1065 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_output_image_address1);
    sensitive << ( output_image_addr_4_reg_846 );
    sensitive << ( output_image_addr_2_reg_915 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_image_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_output_image_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_image_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( grp_fu_823_p2 );

    SC_METHOD(thread_output_image_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_image_we0);
    sensitive << ( tmp_4_reg_866 );
    sensitive << ( tmp_21_reg_1029 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_output_image_we1);
    sensitive << ( tmp_5_reg_870 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_24_fu_676_p2 );

    SC_METHOD(thread_sum_fu_370_p2);
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_tmp1_fu_388_p2);
    sensitive << ( tmp_fu_334_p2 );
    sensitive << ( tmp_1_fu_340_p2 );

    SC_METHOD(thread_tmp2_fu_472_p2);
    sensitive << ( tmp_7_fu_460_p2 );
    sensitive << ( tmp_8_fu_466_p2 );

    SC_METHOD(thread_tmp3_fu_584_p2);
    sensitive << ( input_image_load_2_reg_989 );
    sensitive << ( tmp_40_fu_579_p2 );

    SC_METHOD(thread_tmp_10_fu_307_p2);
    sensitive << ( tmp_s_fu_290_p3 );

    SC_METHOD(thread_tmp_11_fu_562_p2);
    sensitive << ( reg_285 );
    sensitive << ( input_image_load_2_reg_989 );

    SC_METHOD(thread_tmp_12_fu_567_p2);
    sensitive << ( tmp_11_fu_562_p2 );
    sensitive << ( tmp_38_fu_551_p2 );

    SC_METHOD(thread_tmp_13_fu_573_p2);
    sensitive << ( tmp_39_fu_556_p2 );
    sensitive << ( tmp_12_fu_567_p2 );

    SC_METHOD(thread_tmp_14_fu_601_p2);
    sensitive << ( reg_285 );
    sensitive << ( tmp_13_reg_1005 );

    SC_METHOD(thread_tmp_15_fu_313_p3);
    sensitive << ( tmp_10_fu_307_p2 );

    SC_METHOD(thread_tmp_16_fu_346_p3);
    sensitive << ( i_1_fu_328_p2 );

    SC_METHOD(thread_tmp_17_fu_589_p2);
    sensitive << ( reg_285 );
    sensitive << ( tmp3_fu_584_p2 );

    SC_METHOD(thread_tmp_18_fu_595_p2);
    sensitive << ( input_image_q1 );
    sensitive << ( tmp_17_fu_589_p2 );

    SC_METHOD(thread_tmp_19_fu_618_p2);
    sensitive << ( tmp_18_reg_1010 );
    sensitive << ( tmp_41_fu_612_p2 );

    SC_METHOD(thread_tmp_1_fu_340_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_322_p2 );
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_tmp_20_fu_749_p2);
    sensitive << ( image_q0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( min_1_fu_60 );

    SC_METHOD(thread_tmp_21_fu_670_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_tmp_24_fu_676_p2);
    sensitive << ( j_reg_221 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp_25_fu_376_p3);
    sensitive << ( sum_fu_370_p2 );

    SC_METHOD(thread_tmp_26_cast_fu_303_p1);
    sensitive << ( tmp_s_fu_290_p3 );

    SC_METHOD(thread_tmp_26_fu_407_p2);
    sensitive << ( tmp_32_cast_reg_874 );
    sensitive << ( j_cast8_cast_fu_403_p1 );

    SC_METHOD(thread_tmp_27_fu_417_p2);
    sensitive << ( tmp_30_cast_reg_859 );
    sensitive << ( j_cast8_cast_fu_403_p1 );

    SC_METHOD(thread_tmp_28_fu_427_p2);
    sensitive << ( j_cast8_cast1_fu_399_p1 );

    SC_METHOD(thread_tmp_29_fu_438_p2);
    sensitive << ( tmp_26_cast_reg_834 );
    sensitive << ( j_cast8_cast_fu_403_p1 );

    SC_METHOD(thread_tmp_2_fu_735_p2);
    sensitive << ( image_q0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( min_fu_56 );

    SC_METHOD(thread_tmp_30_cast_fu_354_p1);
    sensitive << ( tmp_16_fu_346_p3 );

    SC_METHOD(thread_tmp_30_fu_704_p3);
    sensitive << ( c_reg_233 );
    sensitive << ( d_reg_245 );

    SC_METHOD(thread_tmp_31_fu_712_p1);
    sensitive << ( tmp_30_fu_704_p3 );

    SC_METHOD(thread_tmp_32_cast_fu_384_p1);
    sensitive << ( tmp_25_fu_376_p3 );

    SC_METHOD(thread_tmp_32_fu_493_p2);
    sensitive << ( tmp_32_cast_reg_874 );
    sensitive << ( tmp_9_cast_cast_fu_489_p1 );

    SC_METHOD(thread_tmp_33_cast_fu_412_p1);
    sensitive << ( tmp_26_fu_407_p2 );

    SC_METHOD(thread_tmp_33_fu_503_p2);
    sensitive << ( tmp_26_cast_reg_834 );
    sensitive << ( tmp_9_cast_cast_reg_938 );

    SC_METHOD(thread_tmp_34_cast_fu_422_p1);
    sensitive << ( tmp_27_fu_417_p2 );

    SC_METHOD(thread_tmp_34_fu_512_p2);
    sensitive << ( tmp_30_cast_reg_859 );
    sensitive << ( tmp_9_cast_cast_reg_938 );

    SC_METHOD(thread_tmp_35_cast_fu_433_p1);
    sensitive << ( tmp_28_fu_427_p2 );

    SC_METHOD(thread_tmp_35_fu_519_p2);
    sensitive << ( tmp_32_cast_reg_874 );
    sensitive << ( tmp_cast_cast_fu_516_p1 );

    SC_METHOD(thread_tmp_36_cast_fu_443_p1);
    sensitive << ( tmp_29_fu_438_p2 );

    SC_METHOD(thread_tmp_36_fu_529_p2);
    sensitive << ( tmp_26_cast_reg_834 );
    sensitive << ( tmp_cast_cast_fu_516_p1 );

    SC_METHOD(thread_tmp_37_fu_534_p2);
    sensitive << ( tmp_30_cast_reg_859 );
    sensitive << ( tmp_cast_cast_fu_516_p1 );

    SC_METHOD(thread_tmp_38_fu_551_p2);
    sensitive << ( input_image_load_3_reg_995 );

    SC_METHOD(thread_tmp_39_cast_fu_498_p1);
    sensitive << ( tmp_32_fu_493_p2 );

    SC_METHOD(thread_tmp_39_fu_556_p2);
    sensitive << ( input_image_q0 );

    SC_METHOD(thread_tmp_3_fu_298_p1);
    sensitive << ( tmp_s_fu_290_p3 );

    SC_METHOD(thread_tmp_40_cast_fu_507_p1);
    sensitive << ( tmp_33_fu_503_p2 );

    SC_METHOD(thread_tmp_40_fu_579_p2);
    sensitive << ( input_image_load_1_reg_959 );

    SC_METHOD(thread_tmp_41_cast_fu_539_p1);
    sensitive << ( tmp_34_reg_954 );

    SC_METHOD(thread_tmp_41_fu_612_p2);
    sensitive << ( input_image_q0 );

    SC_METHOD(thread_tmp_42_cast_fu_524_p1);
    sensitive << ( tmp_35_fu_519_p2 );

    SC_METHOD(thread_tmp_42_fu_779_p3);
    sensitive << ( k_reg_256 );
    sensitive << ( l_reg_268 );

    SC_METHOD(thread_tmp_43_cast_fu_543_p1);
    sensitive << ( tmp_36_reg_969 );

    SC_METHOD(thread_tmp_43_fu_787_p1);
    sensitive << ( tmp_42_fu_779_p3 );

    SC_METHOD(thread_tmp_44_cast_fu_547_p1);
    sensitive << ( tmp_37_reg_974 );

    SC_METHOD(thread_tmp_44_fu_811_p2);
    sensitive << ( image_q0 );

    SC_METHOD(thread_tmp_4_fu_358_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_322_p2 );
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_tmp_5_fu_364_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_322_p2 );
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_tmp_6_fu_698_p2);
    sensitive << ( min_fu_56 );
    sensitive << ( min_1_fu_60 );

    SC_METHOD(thread_tmp_7_fu_460_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond4_fu_448_p2 );
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_tmp_8_fu_466_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond4_fu_448_p2 );
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_tmp_9_cast_cast_fu_489_p1);
    sensitive << ( tmp_9_fu_483_p2 );

    SC_METHOD(thread_tmp_9_fu_483_p2);
    sensitive << ( j_reg_221 );

    SC_METHOD(thread_tmp_cast_cast_fu_516_p1);
    sensitive << ( j_1_reg_928 );

    SC_METHOD(thread_tmp_fu_334_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_322_p2 );
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_tmp_s_fu_290_p3);
    sensitive << ( i_reg_210 );

    SC_METHOD(thread_x_dir_fu_606_p2);
    sensitive << ( input_image_q1 );
    sensitive << ( tmp_14_fu_601_p2 );

    SC_METHOD(thread_y_dir_fu_623_p2);
    sensitive << ( input_image_q1 );
    sensitive << ( tmp_19_fu_618_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_fu_322_p2 );
    sensitive << ( or_cond7_fu_478_p2 );
    sensitive << ( exitcond4_fu_448_p2 );
    sensitive << ( exitcond3_fu_692_p2 );
    sensitive << ( exitcond2_fu_717_p2 );
    sensitive << ( exitcond_fu_793_p2 );
    sensitive << ( exitcond1_fu_773_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_image_address0, "(port)input_image_address0");
    sc_trace(mVcdFile, input_image_ce0, "(port)input_image_ce0");
    sc_trace(mVcdFile, input_image_q0, "(port)input_image_q0");
    sc_trace(mVcdFile, input_image_address1, "(port)input_image_address1");
    sc_trace(mVcdFile, input_image_ce1, "(port)input_image_ce1");
    sc_trace(mVcdFile, input_image_q1, "(port)input_image_q1");
    sc_trace(mVcdFile, output_image_address0, "(port)output_image_address0");
    sc_trace(mVcdFile, output_image_ce0, "(port)output_image_ce0");
    sc_trace(mVcdFile, output_image_we0, "(port)output_image_we0");
    sc_trace(mVcdFile, output_image_d0, "(port)output_image_d0");
    sc_trace(mVcdFile, output_image_address1, "(port)output_image_address1");
    sc_trace(mVcdFile, output_image_ce1, "(port)output_image_ce1");
    sc_trace(mVcdFile, output_image_we1, "(port)output_image_we1");
    sc_trace(mVcdFile, output_image_d1, "(port)output_image_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_285, "reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_26_cast_fu_303_p1, "tmp_26_cast_fu_303_p1");
    sc_trace(mVcdFile, tmp_26_cast_reg_834, "tmp_26_cast_reg_834");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, output_image_addr_3_reg_841, "output_image_addr_3_reg_841");
    sc_trace(mVcdFile, output_image_addr_4_reg_846, "output_image_addr_4_reg_846");
    sc_trace(mVcdFile, i_1_fu_328_p2, "i_1_fu_328_p2");
    sc_trace(mVcdFile, i_1_reg_854, "i_1_reg_854");
    sc_trace(mVcdFile, tmp_30_cast_fu_354_p1, "tmp_30_cast_fu_354_p1");
    sc_trace(mVcdFile, tmp_30_cast_reg_859, "tmp_30_cast_reg_859");
    sc_trace(mVcdFile, exitcond5_fu_322_p2, "exitcond5_fu_322_p2");
    sc_trace(mVcdFile, tmp_4_fu_358_p2, "tmp_4_fu_358_p2");
    sc_trace(mVcdFile, tmp_4_reg_866, "tmp_4_reg_866");
    sc_trace(mVcdFile, tmp_5_fu_364_p2, "tmp_5_fu_364_p2");
    sc_trace(mVcdFile, tmp_5_reg_870, "tmp_5_reg_870");
    sc_trace(mVcdFile, tmp_32_cast_fu_384_p1, "tmp_32_cast_fu_384_p1");
    sc_trace(mVcdFile, tmp_32_cast_reg_874, "tmp_32_cast_reg_874");
    sc_trace(mVcdFile, tmp1_fu_388_p2, "tmp1_fu_388_p2");
    sc_trace(mVcdFile, tmp1_reg_881, "tmp1_reg_881");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, input_image_addr_6_reg_905, "input_image_addr_6_reg_905");
    sc_trace(mVcdFile, output_image_addr_reg_910, "output_image_addr_reg_910");
    sc_trace(mVcdFile, output_image_addr_2_reg_915, "output_image_addr_2_reg_915");
    sc_trace(mVcdFile, image_addr_1_reg_920, "image_addr_1_reg_920");
    sc_trace(mVcdFile, j_1_fu_454_p2, "j_1_fu_454_p2");
    sc_trace(mVcdFile, j_1_reg_928, "j_1_reg_928");
    sc_trace(mVcdFile, or_cond7_fu_478_p2, "or_cond7_fu_478_p2");
    sc_trace(mVcdFile, or_cond7_reg_934, "or_cond7_reg_934");
    sc_trace(mVcdFile, exitcond4_fu_448_p2, "exitcond4_fu_448_p2");
    sc_trace(mVcdFile, tmp_9_cast_cast_fu_489_p1, "tmp_9_cast_cast_fu_489_p1");
    sc_trace(mVcdFile, tmp_9_cast_cast_reg_938, "tmp_9_cast_cast_reg_938");
    sc_trace(mVcdFile, tmp_34_fu_512_p2, "tmp_34_fu_512_p2");
    sc_trace(mVcdFile, tmp_34_reg_954, "tmp_34_reg_954");
    sc_trace(mVcdFile, input_image_load_1_reg_959, "input_image_load_1_reg_959");
    sc_trace(mVcdFile, tmp_36_fu_529_p2, "tmp_36_fu_529_p2");
    sc_trace(mVcdFile, tmp_36_reg_969, "tmp_36_reg_969");
    sc_trace(mVcdFile, tmp_37_fu_534_p2, "tmp_37_fu_534_p2");
    sc_trace(mVcdFile, tmp_37_reg_974, "tmp_37_reg_974");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, input_image_load_2_reg_989, "input_image_load_2_reg_989");
    sc_trace(mVcdFile, input_image_load_3_reg_995, "input_image_load_3_reg_995");
    sc_trace(mVcdFile, tmp_13_fu_573_p2, "tmp_13_fu_573_p2");
    sc_trace(mVcdFile, tmp_13_reg_1005, "tmp_13_reg_1005");
    sc_trace(mVcdFile, tmp_18_fu_595_p2, "tmp_18_fu_595_p2");
    sc_trace(mVcdFile, tmp_18_reg_1010, "tmp_18_reg_1010");
    sc_trace(mVcdFile, x_dir_fu_606_p2, "x_dir_fu_606_p2");
    sc_trace(mVcdFile, x_dir_reg_1015, "x_dir_reg_1015");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, y_dir_fu_623_p2, "y_dir_fu_623_p2");
    sc_trace(mVcdFile, y_dir_reg_1022, "y_dir_reg_1022");
    sc_trace(mVcdFile, tmp_21_fu_670_p2, "tmp_21_fu_670_p2");
    sc_trace(mVcdFile, tmp_21_reg_1029, "tmp_21_reg_1029");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_6_fu_698_p2, "tmp_6_fu_698_p2");
    sc_trace(mVcdFile, tmp_6_reg_1039, "tmp_6_reg_1039");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond3_fu_692_p2, "exitcond3_fu_692_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, d_1_fu_723_p2, "d_1_fu_723_p2");
    sc_trace(mVcdFile, d_1_reg_1052, "d_1_reg_1052");
    sc_trace(mVcdFile, exitcond2_fu_717_p2, "exitcond2_fu_717_p2");
    sc_trace(mVcdFile, c_1_fu_729_p2, "c_1_fu_729_p2");
    sc_trace(mVcdFile, output_image_addr_1_reg_1065, "output_image_addr_1_reg_1065");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, l_1_fu_799_p2, "l_1_fu_799_p2");
    sc_trace(mVcdFile, l_1_reg_1078, "l_1_reg_1078");
    sc_trace(mVcdFile, exitcond_fu_793_p2, "exitcond_fu_793_p2");
    sc_trace(mVcdFile, k_1_fu_805_p2, "k_1_fu_805_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, image_address0, "image_address0");
    sc_trace(mVcdFile, image_ce0, "image_ce0");
    sc_trace(mVcdFile, image_we0, "image_we0");
    sc_trace(mVcdFile, image_d0, "image_d0");
    sc_trace(mVcdFile, image_q0, "image_q0");
    sc_trace(mVcdFile, i_reg_210, "i_reg_210");
    sc_trace(mVcdFile, j_reg_221, "j_reg_221");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, c_reg_233, "c_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, d_reg_245, "d_reg_245");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, k_reg_256, "k_reg_256");
    sc_trace(mVcdFile, l_reg_268, "l_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, exitcond1_fu_773_p2, "exitcond1_fu_773_p2");
    sc_trace(mVcdFile, tmp_3_fu_298_p1, "tmp_3_fu_298_p1");
    sc_trace(mVcdFile, tmp_15_fu_313_p3, "tmp_15_fu_313_p3");
    sc_trace(mVcdFile, tmp_33_cast_fu_412_p1, "tmp_33_cast_fu_412_p1");
    sc_trace(mVcdFile, tmp_34_cast_fu_422_p1, "tmp_34_cast_fu_422_p1");
    sc_trace(mVcdFile, j_cast8_fu_394_p1, "j_cast8_fu_394_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_433_p1, "tmp_35_cast_fu_433_p1");
    sc_trace(mVcdFile, tmp_36_cast_fu_443_p1, "tmp_36_cast_fu_443_p1");
    sc_trace(mVcdFile, tmp_39_cast_fu_498_p1, "tmp_39_cast_fu_498_p1");
    sc_trace(mVcdFile, tmp_40_cast_fu_507_p1, "tmp_40_cast_fu_507_p1");
    sc_trace(mVcdFile, tmp_42_cast_fu_524_p1, "tmp_42_cast_fu_524_p1");
    sc_trace(mVcdFile, tmp_41_cast_fu_539_p1, "tmp_41_cast_fu_539_p1");
    sc_trace(mVcdFile, tmp_43_cast_fu_543_p1, "tmp_43_cast_fu_543_p1");
    sc_trace(mVcdFile, tmp_44_cast_fu_547_p1, "tmp_44_cast_fu_547_p1");
    sc_trace(mVcdFile, tmp_31_fu_712_p1, "tmp_31_fu_712_p1");
    sc_trace(mVcdFile, tmp_43_fu_787_p1, "tmp_43_fu_787_p1");
    sc_trace(mVcdFile, min_fu_56, "min_fu_56");
    sc_trace(mVcdFile, max_6_max_1_fu_741_p3, "max_6_max_1_fu_741_p3");
    sc_trace(mVcdFile, min_1_fu_60, "min_1_fu_60");
    sc_trace(mVcdFile, max_fu_755_p3, "max_fu_755_p3");
    sc_trace(mVcdFile, tmp_24_fu_676_p2, "tmp_24_fu_676_p2");
    sc_trace(mVcdFile, grp_fu_823_p2, "grp_fu_823_p2");
    sc_trace(mVcdFile, tmp_s_fu_290_p3, "tmp_s_fu_290_p3");
    sc_trace(mVcdFile, tmp_10_fu_307_p2, "tmp_10_fu_307_p2");
    sc_trace(mVcdFile, tmp_16_fu_346_p3, "tmp_16_fu_346_p3");
    sc_trace(mVcdFile, sum_fu_370_p2, "sum_fu_370_p2");
    sc_trace(mVcdFile, tmp_25_fu_376_p3, "tmp_25_fu_376_p3");
    sc_trace(mVcdFile, tmp_fu_334_p2, "tmp_fu_334_p2");
    sc_trace(mVcdFile, tmp_1_fu_340_p2, "tmp_1_fu_340_p2");
    sc_trace(mVcdFile, j_cast8_cast_fu_403_p1, "j_cast8_cast_fu_403_p1");
    sc_trace(mVcdFile, tmp_26_fu_407_p2, "tmp_26_fu_407_p2");
    sc_trace(mVcdFile, tmp_27_fu_417_p2, "tmp_27_fu_417_p2");
    sc_trace(mVcdFile, j_cast8_cast1_fu_399_p1, "j_cast8_cast1_fu_399_p1");
    sc_trace(mVcdFile, tmp_28_fu_427_p2, "tmp_28_fu_427_p2");
    sc_trace(mVcdFile, tmp_29_fu_438_p2, "tmp_29_fu_438_p2");
    sc_trace(mVcdFile, tmp_7_fu_460_p2, "tmp_7_fu_460_p2");
    sc_trace(mVcdFile, tmp_8_fu_466_p2, "tmp_8_fu_466_p2");
    sc_trace(mVcdFile, tmp2_fu_472_p2, "tmp2_fu_472_p2");
    sc_trace(mVcdFile, tmp_9_fu_483_p2, "tmp_9_fu_483_p2");
    sc_trace(mVcdFile, tmp_32_fu_493_p2, "tmp_32_fu_493_p2");
    sc_trace(mVcdFile, tmp_33_fu_503_p2, "tmp_33_fu_503_p2");
    sc_trace(mVcdFile, tmp_cast_cast_fu_516_p1, "tmp_cast_cast_fu_516_p1");
    sc_trace(mVcdFile, tmp_35_fu_519_p2, "tmp_35_fu_519_p2");
    sc_trace(mVcdFile, tmp_11_fu_562_p2, "tmp_11_fu_562_p2");
    sc_trace(mVcdFile, tmp_38_fu_551_p2, "tmp_38_fu_551_p2");
    sc_trace(mVcdFile, tmp_39_fu_556_p2, "tmp_39_fu_556_p2");
    sc_trace(mVcdFile, tmp_12_fu_567_p2, "tmp_12_fu_567_p2");
    sc_trace(mVcdFile, tmp_40_fu_579_p2, "tmp_40_fu_579_p2");
    sc_trace(mVcdFile, tmp3_fu_584_p2, "tmp3_fu_584_p2");
    sc_trace(mVcdFile, tmp_17_fu_589_p2, "tmp_17_fu_589_p2");
    sc_trace(mVcdFile, tmp_14_fu_601_p2, "tmp_14_fu_601_p2");
    sc_trace(mVcdFile, tmp_41_fu_612_p2, "tmp_41_fu_612_p2");
    sc_trace(mVcdFile, tmp_19_fu_618_p2, "tmp_19_fu_618_p2");
    sc_trace(mVcdFile, abscond_fu_634_p2, "abscond_fu_634_p2");
    sc_trace(mVcdFile, neg_fu_629_p2, "neg_fu_629_p2");
    sc_trace(mVcdFile, abscond1_fu_651_p2, "abscond1_fu_651_p2");
    sc_trace(mVcdFile, neg1_fu_646_p2, "neg1_fu_646_p2");
    sc_trace(mVcdFile, abs_fu_639_p3, "abs_fu_639_p3");
    sc_trace(mVcdFile, abs1_fu_656_p3, "abs1_fu_656_p3");
    sc_trace(mVcdFile, tmp_30_fu_704_p3, "tmp_30_fu_704_p3");
    sc_trace(mVcdFile, tmp_2_fu_735_p2, "tmp_2_fu_735_p2");
    sc_trace(mVcdFile, tmp_20_fu_749_p2, "tmp_20_fu_749_p2");
    sc_trace(mVcdFile, tmp_42_fu_779_p3, "tmp_42_fu_779_p3");
    sc_trace(mVcdFile, tmp_44_fu_811_p2, "tmp_44_fu_811_p2");
    sc_trace(mVcdFile, grp_fu_823_p0, "grp_fu_823_p0");
    sc_trace(mVcdFile, grp_fu_823_ap_start, "grp_fu_823_ap_start");
    sc_trace(mVcdFile, grp_fu_823_ap_done, "grp_fu_823_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("sobel.hdltvin.dat");
    mHdltvoutHandle.open("sobel.hdltvout.dat");
}

sobel::~sobel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete image_U;
    delete sobel_sdiv_32ns_3bkb_U0;
}

void sobel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sobel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_717_p2.read()))) {
        c_reg_233 = c_1_fu_729_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        c_reg_233 = ap_const_lv8_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_692_p2.read()))) {
        d_reg_245 = ap_const_lv8_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        d_reg_245 = d_1_reg_1052.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_448_p2.read()))) {
        i_reg_210 = i_1_reg_854.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_210 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_322_p2.read(), ap_const_lv1_0))) {
        j_reg_221 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        j_reg_221 = j_1_reg_928.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_692_p2.read()))) {
        k_reg_256 = ap_const_lv8_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_793_p2.read()))) {
        k_reg_256 = k_1_fu_805_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_773_p2.read()))) {
        l_reg_268 = ap_const_lv8_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()))) {
        l_reg_268 = l_1_reg_1078.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        min_1_fu_60 = max_fu_755_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        min_1_fu_60 = image_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        min_fu_56 = max_6_max_1_fu_741_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        min_fu_56 = image_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        reg_285 = input_image_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        reg_285 = input_image_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_717_p2.read()))) {
        d_1_reg_1052 = d_1_fu_723_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_854 = i_1_fu_328_p2.read();
        output_image_addr_3_reg_841 =  (sc_lv<16>) (tmp_3_fu_298_p1.read());
        output_image_addr_4_reg_846 =  (sc_lv<16>) (tmp_15_fu_313_p3.read());
        tmp_26_cast_reg_834 = tmp_26_cast_fu_303_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        image_addr_1_reg_920 =  (sc_lv<16>) (tmp_36_cast_fu_443_p1.read());
        input_image_addr_6_reg_905 =  (sc_lv<16>) (tmp_34_cast_fu_422_p1.read());
        j_1_reg_928 = j_1_fu_454_p2.read();
        output_image_addr_2_reg_915 =  (sc_lv<16>) (tmp_35_cast_fu_433_p1.read());
        output_image_addr_reg_910 =  (sc_lv<16>) (j_cast8_fu_394_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        input_image_load_1_reg_959 = input_image_q1.read();
        tmp_34_reg_954 = tmp_34_fu_512_p2.read();
        tmp_36_reg_969 = tmp_36_fu_529_p2.read();
        tmp_37_reg_974 = tmp_37_fu_534_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        input_image_load_2_reg_989 = input_image_q0.read();
        input_image_load_3_reg_995 = input_image_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_793_p2.read()))) {
        l_1_reg_1078 = l_1_fu_799_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_448_p2.read()))) {
        or_cond7_reg_934 = or_cond7_fu_478_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        output_image_addr_1_reg_1065 =  (sc_lv<16>) (tmp_43_fu_787_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond5_fu_322_p2.read(), ap_const_lv1_0))) {
        tmp1_reg_881 = tmp1_fu_388_p2.read();
        tmp_30_cast_reg_859 = tmp_30_cast_fu_354_p1.read();
        tmp_32_cast_reg_874 = tmp_32_cast_fu_384_p1.read();
        tmp_4_reg_866 = tmp_4_fu_358_p2.read();
        tmp_5_reg_870 = tmp_5_fu_364_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        tmp_13_reg_1005 = tmp_13_fu_573_p2.read();
        tmp_18_reg_1010 = tmp_18_fu_595_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        tmp_21_reg_1029 = tmp_21_fu_670_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_692_p2.read()))) {
        tmp_6_reg_1039 = tmp_6_fu_698_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_448_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_478_p2.read()))) {
        tmp_9_cast_cast_reg_938 = tmp_9_cast_cast_fu_489_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x_dir_reg_1015 = x_dir_fu_606_p2.read();
        y_dir_reg_1022 = y_dir_fu_623_p2.read();
    }
}

void sobel::thread_abs1_fu_656_p3() {
    abs1_fu_656_p3 = (!abscond1_fu_651_p2.read()[0].is_01())? sc_lv<32>(): ((abscond1_fu_651_p2.read()[0].to_bool())? y_dir_reg_1022.read(): neg1_fu_646_p2.read());
}

void sobel::thread_abs_fu_639_p3() {
    abs_fu_639_p3 = (!abscond_fu_634_p2.read()[0].is_01())? sc_lv<32>(): ((abscond_fu_634_p2.read()[0].to_bool())? x_dir_reg_1015.read(): neg_fu_629_p2.read());
}

void sobel::thread_abscond1_fu_651_p2() {
    abscond1_fu_651_p2 = (!y_dir_reg_1022.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(y_dir_reg_1022.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void sobel::thread_abscond_fu_634_p2() {
    abscond_fu_634_p2 = (!x_dir_reg_1015.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(x_dir_reg_1015.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void sobel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void sobel::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void sobel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void sobel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void sobel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void sobel::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void sobel::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void sobel::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void sobel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void sobel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void sobel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void sobel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void sobel::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read().range(50, 50);
}

void sobel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void sobel::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void sobel::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void sobel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void sobel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_773_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sobel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_773_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel::thread_c_1_fu_729_p2() {
    c_1_fu_729_p2 = (!c_reg_233.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(c_reg_233.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sobel::thread_d_1_fu_723_p2() {
    d_1_fu_723_p2 = (!d_reg_245.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(d_reg_245.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sobel::thread_exitcond1_fu_773_p2() {
    exitcond1_fu_773_p2 = (!k_reg_256.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_256.read() == ap_const_lv8_FF);
}

void sobel::thread_exitcond2_fu_717_p2() {
    exitcond2_fu_717_p2 = (!d_reg_245.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(d_reg_245.read() == ap_const_lv8_FF);
}

void sobel::thread_exitcond3_fu_692_p2() {
    exitcond3_fu_692_p2 = (!c_reg_233.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(c_reg_233.read() == ap_const_lv8_FF);
}

void sobel::thread_exitcond4_fu_448_p2() {
    exitcond4_fu_448_p2 = (!j_reg_221.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_221.read() == ap_const_lv9_100);
}

void sobel::thread_exitcond5_fu_322_p2() {
    exitcond5_fu_322_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_210.read() == ap_const_lv9_100);
}

void sobel::thread_exitcond_fu_793_p2() {
    exitcond_fu_793_p2 = (!l_reg_268.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(l_reg_268.read() == ap_const_lv8_FF);
}

void sobel::thread_grp_fu_823_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        grp_fu_823_ap_start = ap_const_logic_1;
    } else {
        grp_fu_823_ap_start = ap_const_logic_0;
    }
}

void sobel::thread_grp_fu_823_p0() {
    grp_fu_823_p0 = (!tmp_44_fu_811_p2.read().is_01() || !image_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_44_fu_811_p2.read()) - sc_biguint<32>(image_q0.read()));
}

void sobel::thread_i_1_fu_328_p2() {
    i_1_fu_328_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_210.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void sobel::thread_image_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        image_address0 =  (sc_lv<16>) (tmp_43_fu_787_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        image_address0 =  (sc_lv<16>) (tmp_31_fu_712_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        image_address0 = image_addr_1_reg_920.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        image_address0 =  (sc_lv<16>) (ap_const_lv32_101);
    } else {
        image_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_image_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read())))) {
        image_ce0 = ap_const_logic_1;
    } else {
        image_ce0 = ap_const_logic_0;
    }
}

void sobel::thread_image_d0() {
    image_d0 = (!abs_fu_639_p3.read().is_01() || !abs1_fu_656_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(abs_fu_639_p3.read()) + sc_biguint<32>(abs1_fu_656_p3.read()));
}

void sobel::thread_image_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_reg_934.read())))) {
        image_we0 = ap_const_logic_1;
    } else {
        image_we0 = ap_const_logic_0;
    }
}

void sobel::thread_input_image_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        input_image_address0 = input_image_addr_6_reg_905.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        input_image_address0 =  (sc_lv<16>) (tmp_43_cast_fu_543_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        input_image_address0 =  (sc_lv<16>) (tmp_42_cast_fu_524_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        input_image_address0 =  (sc_lv<16>) (tmp_39_cast_fu_498_p1.read());
    } else {
        input_image_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_input_image_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        input_image_address1 =  (sc_lv<16>) (tmp_44_cast_fu_547_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        input_image_address1 =  (sc_lv<16>) (tmp_41_cast_fu_539_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        input_image_address1 =  (sc_lv<16>) (tmp_40_cast_fu_507_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        input_image_address1 =  (sc_lv<16>) (tmp_33_cast_fu_412_p1.read());
    } else {
        input_image_address1 = "XXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_input_image_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())))) {
        input_image_ce0 = ap_const_logic_1;
    } else {
        input_image_ce0 = ap_const_logic_0;
    }
}

void sobel::thread_input_image_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())))) {
        input_image_ce1 = ap_const_logic_1;
    } else {
        input_image_ce1 = ap_const_logic_0;
    }
}

void sobel::thread_j_1_fu_454_p2() {
    j_1_fu_454_p2 = (!j_reg_221.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_221.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void sobel::thread_j_cast8_cast1_fu_399_p1() {
    j_cast8_cast1_fu_399_p1 = esl_zext<17,9>(j_reg_221.read());
}

void sobel::thread_j_cast8_cast_fu_403_p1() {
    j_cast8_cast_fu_403_p1 = esl_zext<18,9>(j_reg_221.read());
}

void sobel::thread_j_cast8_fu_394_p1() {
    j_cast8_fu_394_p1 = esl_zext<32,9>(j_reg_221.read());
}

void sobel::thread_k_1_fu_805_p2() {
    k_1_fu_805_p2 = (!k_reg_256.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(k_reg_256.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sobel::thread_l_1_fu_799_p2() {
    l_1_fu_799_p2 = (!ap_const_lv8_1.is_01() || !l_reg_268.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(l_reg_268.read()));
}

void sobel::thread_max_6_max_1_fu_741_p3() {
    max_6_max_1_fu_741_p3 = (!tmp_2_fu_735_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_fu_735_p2.read()[0].to_bool())? image_q0.read(): min_fu_56.read());
}

void sobel::thread_max_fu_755_p3() {
    max_fu_755_p3 = (!tmp_20_fu_749_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_20_fu_749_p2.read()[0].to_bool())? image_q0.read(): min_1_fu_60.read());
}

void sobel::thread_neg1_fu_646_p2() {
    neg1_fu_646_p2 = (!ap_const_lv32_0.is_01() || !y_dir_reg_1022.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(y_dir_reg_1022.read()));
}

void sobel::thread_neg_fu_629_p2() {
    neg_fu_629_p2 = (!ap_const_lv32_0.is_01() || !x_dir_reg_1015.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(x_dir_reg_1015.read()));
}

void sobel::thread_or_cond7_fu_478_p2() {
    or_cond7_fu_478_p2 = (tmp2_fu_472_p2.read() & tmp1_reg_881.read());
}

void sobel::thread_output_image_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()))) {
        output_image_address0 = output_image_addr_1_reg_1065.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        output_image_address0 = output_image_addr_3_reg_841.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        output_image_address0 = output_image_addr_reg_910.read();
    } else {
        output_image_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_output_image_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        output_image_address1 = output_image_addr_4_reg_846.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        output_image_address1 = output_image_addr_2_reg_915.read();
    } else {
        output_image_address1 = "XXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_output_image_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read())))) {
        output_image_ce0 = ap_const_logic_1;
    } else {
        output_image_ce0 = ap_const_logic_0;
    }
}

void sobel::thread_output_image_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())))) {
        output_image_ce1 = ap_const_logic_1;
    } else {
        output_image_ce1 = ap_const_logic_0;
    }
}

void sobel::thread_output_image_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()))) {
        output_image_d0 = grp_fu_823_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())))) {
        output_image_d0 = ap_const_lv32_0;
    } else {
        output_image_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sobel::thread_output_image_d1() {
    output_image_d1 = ap_const_lv32_0;
}

void sobel::thread_output_image_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_866.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_1029.read())))) {
        output_image_we0 = ap_const_logic_1;
    } else {
        output_image_we0 = ap_const_logic_0;
    }
}

void sobel::thread_output_image_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_870.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_24_fu_676_p2.read())))) {
        output_image_we1 = ap_const_logic_1;
    } else {
        output_image_we1 = ap_const_logic_0;
    }
}

void sobel::thread_sum_fu_370_p2() {
    sum_fu_370_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_210.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void sobel::thread_tmp1_fu_388_p2() {
    tmp1_fu_388_p2 = (tmp_fu_334_p2.read() & tmp_1_fu_340_p2.read());
}

void sobel::thread_tmp2_fu_472_p2() {
    tmp2_fu_472_p2 = (tmp_7_fu_460_p2.read() & tmp_8_fu_466_p2.read());
}

void sobel::thread_tmp3_fu_584_p2() {
    tmp3_fu_584_p2 = (!tmp_40_fu_579_p2.read().is_01() || !input_image_load_2_reg_989.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_40_fu_579_p2.read()) + sc_biguint<32>(input_image_load_2_reg_989.read()));
}

void sobel::thread_tmp_10_fu_307_p2() {
    tmp_10_fu_307_p2 = (tmp_s_fu_290_p3.read() | ap_const_lv17_FF);
}

void sobel::thread_tmp_11_fu_562_p2() {
    tmp_11_fu_562_p2 = (!input_image_load_2_reg_989.read().is_01() || !reg_285.read().is_01())? sc_lv<32>(): (sc_biguint<32>(input_image_load_2_reg_989.read()) - sc_biguint<32>(reg_285.read()));
}

void sobel::thread_tmp_12_fu_567_p2() {
    tmp_12_fu_567_p2 = (!tmp_11_fu_562_p2.read().is_01() || !tmp_38_fu_551_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_11_fu_562_p2.read()) - sc_biguint<32>(tmp_38_fu_551_p2.read()));
}

void sobel::thread_tmp_13_fu_573_p2() {
    tmp_13_fu_573_p2 = (!tmp_39_fu_556_p2.read().is_01() || !tmp_12_fu_567_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_39_fu_556_p2.read()) + sc_biguint<32>(tmp_12_fu_567_p2.read()));
}

void sobel::thread_tmp_14_fu_601_p2() {
    tmp_14_fu_601_p2 = (!tmp_13_reg_1005.read().is_01() || !reg_285.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_13_reg_1005.read()) - sc_biguint<32>(reg_285.read()));
}

void sobel::thread_tmp_15_fu_313_p3() {
    tmp_15_fu_313_p3 = esl_concat<15,17>(ap_const_lv15_0, tmp_10_fu_307_p2.read());
}

void sobel::thread_tmp_16_fu_346_p3() {
    tmp_16_fu_346_p3 = esl_concat<9,8>(i_1_fu_328_p2.read(), ap_const_lv8_0);
}

void sobel::thread_tmp_17_fu_589_p2() {
    tmp_17_fu_589_p2 = (!reg_285.read().is_01() || !tmp3_fu_584_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_285.read()) + sc_biguint<32>(tmp3_fu_584_p2.read()));
}

void sobel::thread_tmp_18_fu_595_p2() {
    tmp_18_fu_595_p2 = (!tmp_17_fu_589_p2.read().is_01() || !input_image_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_17_fu_589_p2.read()) - sc_biguint<32>(input_image_q1.read()));
}

void sobel::thread_tmp_19_fu_618_p2() {
    tmp_19_fu_618_p2 = (!tmp_18_reg_1010.read().is_01() || !tmp_41_fu_612_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_18_reg_1010.read()) - sc_biguint<32>(tmp_41_fu_612_p2.read()));
}

void sobel::thread_tmp_1_fu_340_p2() {
    tmp_1_fu_340_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_FF.is_01())? sc_lv<1>(): (sc_biguint<9>(i_reg_210.read()) < sc_biguint<9>(ap_const_lv9_FF));
}

void sobel::thread_tmp_20_fu_749_p2() {
    tmp_20_fu_749_p2 = (!image_q0.read().is_01() || !min_1_fu_60.read().is_01())? sc_lv<1>(): (sc_bigint<32>(image_q0.read()) < sc_bigint<32>(min_1_fu_60.read()));
}

void sobel::thread_tmp_21_fu_670_p2() {
    tmp_21_fu_670_p2 = (!j_reg_221.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_221.read() == ap_const_lv9_0);
}

void sobel::thread_tmp_24_fu_676_p2() {
    tmp_24_fu_676_p2 = (!j_reg_221.read().is_01() || !ap_const_lv9_FF.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_221.read() == ap_const_lv9_FF);
}

void sobel::thread_tmp_25_fu_376_p3() {
    tmp_25_fu_376_p3 = esl_concat<9,8>(sum_fu_370_p2.read(), ap_const_lv8_0);
}

void sobel::thread_tmp_26_cast_fu_303_p1() {
    tmp_26_cast_fu_303_p1 = esl_zext<18,17>(tmp_s_fu_290_p3.read());
}

void sobel::thread_tmp_26_fu_407_p2() {
    tmp_26_fu_407_p2 = (!tmp_32_cast_reg_874.read().is_01() || !j_cast8_cast_fu_403_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_32_cast_reg_874.read()) + sc_biguint<18>(j_cast8_cast_fu_403_p1.read()));
}

void sobel::thread_tmp_27_fu_417_p2() {
    tmp_27_fu_417_p2 = (!tmp_30_cast_reg_859.read().is_01() || !j_cast8_cast_fu_403_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_30_cast_reg_859.read()) + sc_biguint<18>(j_cast8_cast_fu_403_p1.read()));
}

void sobel::thread_tmp_28_fu_427_p2() {
    tmp_28_fu_427_p2 = (!j_cast8_cast1_fu_399_p1.read().is_01() || !ap_const_lv17_FF00.is_01())? sc_lv<17>(): (sc_biguint<17>(j_cast8_cast1_fu_399_p1.read()) + sc_biguint<17>(ap_const_lv17_FF00));
}

void sobel::thread_tmp_29_fu_438_p2() {
    tmp_29_fu_438_p2 = (!tmp_26_cast_reg_834.read().is_01() || !j_cast8_cast_fu_403_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_26_cast_reg_834.read()) + sc_biguint<18>(j_cast8_cast_fu_403_p1.read()));
}

void sobel::thread_tmp_2_fu_735_p2() {
    tmp_2_fu_735_p2 = (!image_q0.read().is_01() || !min_fu_56.read().is_01())? sc_lv<1>(): (sc_bigint<32>(image_q0.read()) > sc_bigint<32>(min_fu_56.read()));
}

void sobel::thread_tmp_30_cast_fu_354_p1() {
    tmp_30_cast_fu_354_p1 = esl_zext<18,17>(tmp_16_fu_346_p3.read());
}

void sobel::thread_tmp_30_fu_704_p3() {
    tmp_30_fu_704_p3 = esl_concat<8,8>(c_reg_233.read(), d_reg_245.read());
}

void sobel::thread_tmp_31_fu_712_p1() {
    tmp_31_fu_712_p1 = esl_zext<32,16>(tmp_30_fu_704_p3.read());
}

void sobel::thread_tmp_32_cast_fu_384_p1() {
    tmp_32_cast_fu_384_p1 = esl_sext<18,17>(tmp_25_fu_376_p3.read());
}

void sobel::thread_tmp_32_fu_493_p2() {
    tmp_32_fu_493_p2 = (!tmp_32_cast_reg_874.read().is_01() || !tmp_9_cast_cast_fu_489_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_32_cast_reg_874.read()) + sc_biguint<18>(tmp_9_cast_cast_fu_489_p1.read()));
}

void sobel::thread_tmp_33_cast_fu_412_p1() {
    tmp_33_cast_fu_412_p1 = esl_sext<32,18>(tmp_26_fu_407_p2.read());
}

void sobel::thread_tmp_33_fu_503_p2() {
    tmp_33_fu_503_p2 = (!tmp_26_cast_reg_834.read().is_01() || !tmp_9_cast_cast_reg_938.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_26_cast_reg_834.read()) + sc_biguint<18>(tmp_9_cast_cast_reg_938.read()));
}

void sobel::thread_tmp_34_cast_fu_422_p1() {
    tmp_34_cast_fu_422_p1 = esl_zext<32,18>(tmp_27_fu_417_p2.read());
}

void sobel::thread_tmp_34_fu_512_p2() {
    tmp_34_fu_512_p2 = (!tmp_30_cast_reg_859.read().is_01() || !tmp_9_cast_cast_reg_938.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_30_cast_reg_859.read()) + sc_biguint<18>(tmp_9_cast_cast_reg_938.read()));
}

void sobel::thread_tmp_35_cast_fu_433_p1() {
    tmp_35_cast_fu_433_p1 = esl_zext<32,17>(tmp_28_fu_427_p2.read());
}

void sobel::thread_tmp_35_fu_519_p2() {
    tmp_35_fu_519_p2 = (!tmp_32_cast_reg_874.read().is_01() || !tmp_cast_cast_fu_516_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_32_cast_reg_874.read()) + sc_biguint<18>(tmp_cast_cast_fu_516_p1.read()));
}

void sobel::thread_tmp_36_cast_fu_443_p1() {
    tmp_36_cast_fu_443_p1 = esl_zext<32,18>(tmp_29_fu_438_p2.read());
}

void sobel::thread_tmp_36_fu_529_p2() {
    tmp_36_fu_529_p2 = (!tmp_26_cast_reg_834.read().is_01() || !tmp_cast_cast_fu_516_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_26_cast_reg_834.read()) + sc_biguint<18>(tmp_cast_cast_fu_516_p1.read()));
}

void sobel::thread_tmp_37_fu_534_p2() {
    tmp_37_fu_534_p2 = (!tmp_30_cast_reg_859.read().is_01() || !tmp_cast_cast_fu_516_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_30_cast_reg_859.read()) + sc_biguint<18>(tmp_cast_cast_fu_516_p1.read()));
}

void sobel::thread_tmp_38_fu_551_p2() {
    tmp_38_fu_551_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): input_image_load_3_reg_995.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void sobel::thread_tmp_39_cast_fu_498_p1() {
    tmp_39_cast_fu_498_p1 = esl_sext<32,18>(tmp_32_fu_493_p2.read());
}

void sobel::thread_tmp_39_fu_556_p2() {
    tmp_39_fu_556_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): input_image_q0.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void sobel::thread_tmp_3_fu_298_p1() {
    tmp_3_fu_298_p1 = esl_zext<32,17>(tmp_s_fu_290_p3.read());
}

void sobel::thread_tmp_40_cast_fu_507_p1() {
    tmp_40_cast_fu_507_p1 = esl_zext<32,18>(tmp_33_fu_503_p2.read());
}

void sobel::thread_tmp_40_fu_579_p2() {
    tmp_40_fu_579_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): input_image_load_1_reg_959.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void sobel::thread_tmp_41_cast_fu_539_p1() {
    tmp_41_cast_fu_539_p1 = esl_zext<32,18>(tmp_34_reg_954.read());
}

void sobel::thread_tmp_41_fu_612_p2() {
    tmp_41_fu_612_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): input_image_q0.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void sobel::thread_tmp_42_cast_fu_524_p1() {
    tmp_42_cast_fu_524_p1 = esl_sext<32,18>(tmp_35_fu_519_p2.read());
}

void sobel::thread_tmp_42_fu_779_p3() {
    tmp_42_fu_779_p3 = esl_concat<8,8>(k_reg_256.read(), l_reg_268.read());
}

void sobel::thread_tmp_43_cast_fu_543_p1() {
    tmp_43_cast_fu_543_p1 = esl_zext<32,18>(tmp_36_reg_969.read());
}

void sobel::thread_tmp_43_fu_787_p1() {
    tmp_43_fu_787_p1 = esl_zext<32,16>(tmp_42_fu_779_p3.read());
}

void sobel::thread_tmp_44_cast_fu_547_p1() {
    tmp_44_cast_fu_547_p1 = esl_zext<32,18>(tmp_37_reg_974.read());
}

void sobel::thread_tmp_44_fu_811_p2() {
    tmp_44_fu_811_p2 = (!ap_const_lv32_8.is_01())? sc_lv<32>(): image_q0.read() << (unsigned short)ap_const_lv32_8.to_uint();
}

void sobel::thread_tmp_4_fu_358_p2() {
    tmp_4_fu_358_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_210.read() == ap_const_lv9_0);
}

void sobel::thread_tmp_5_fu_364_p2() {
    tmp_5_fu_364_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_FF.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_210.read() == ap_const_lv9_FF);
}

void sobel::thread_tmp_6_fu_698_p2() {
    tmp_6_fu_698_p2 = (!min_fu_56.read().is_01() || !min_1_fu_60.read().is_01())? sc_lv<32>(): (sc_biguint<32>(min_fu_56.read()) - sc_biguint<32>(min_1_fu_60.read()));
}

void sobel::thread_tmp_7_fu_460_p2() {
    tmp_7_fu_460_p2 = (!j_reg_221.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_221.read() != ap_const_lv9_0);
}

void sobel::thread_tmp_8_fu_466_p2() {
    tmp_8_fu_466_p2 = (!j_reg_221.read().is_01() || !ap_const_lv9_FF.is_01())? sc_lv<1>(): (sc_biguint<9>(j_reg_221.read()) < sc_biguint<9>(ap_const_lv9_FF));
}

void sobel::thread_tmp_9_cast_cast_fu_489_p1() {
    tmp_9_cast_cast_fu_489_p1 = esl_zext<18,9>(tmp_9_fu_483_p2.read());
}

void sobel::thread_tmp_9_fu_483_p2() {
    tmp_9_fu_483_p2 = (!ap_const_lv9_1FF.is_01() || !j_reg_221.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1FF) + sc_biguint<9>(j_reg_221.read()));
}

void sobel::thread_tmp_cast_cast_fu_516_p1() {
    tmp_cast_cast_fu_516_p1 = esl_zext<18,9>(j_1_reg_928.read());
}

void sobel::thread_tmp_fu_334_p2() {
    tmp_fu_334_p2 = (!i_reg_210.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_210.read() != ap_const_lv9_0);
}

void sobel::thread_tmp_s_fu_290_p3() {
    tmp_s_fu_290_p3 = esl_concat<9,8>(i_reg_210.read(), ap_const_lv8_0);
}

void sobel::thread_x_dir_fu_606_p2() {
    x_dir_fu_606_p2 = (!tmp_14_fu_601_p2.read().is_01() || !input_image_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_14_fu_601_p2.read()) + sc_biguint<32>(input_image_q1.read()));
}

void sobel::thread_y_dir_fu_623_p2() {
    y_dir_fu_623_p2 = (!tmp_19_fu_618_p2.read().is_01() || !input_image_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_19_fu_618_p2.read()) - sc_biguint<32>(input_image_q1.read()));
}

void sobel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond5_fu_322_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_448_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_448_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_478_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_692_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_717_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_773_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_793_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<51>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void sobel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_image_address0\" :  \"" << input_image_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_image_ce0\" :  \"" << input_image_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_q0\" :  \"" << input_image_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_image_address1\" :  \"" << input_image_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_image_ce1\" :  \"" << input_image_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_q1\" :  \"" << input_image_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_address0\" :  \"" << output_image_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_ce0\" :  \"" << output_image_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_we0\" :  \"" << output_image_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_d0\" :  \"" << output_image_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_address1\" :  \"" << output_image_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_ce1\" :  \"" << output_image_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_we1\" :  \"" << output_image_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_d1\" :  \"" << output_image_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

